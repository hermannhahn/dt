(()=>{"use strict";var e={120:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(247),s=r(n(147)),i=n(475),a=n(67),l=n(357);function c(){const e=s.default.readFileSync("version.txt","utf-8");o.program.version(e,"-v, --version","output the current dt version").alias("version").description("Tools for developers"),o.program.command("ping").description("test command"),o.program.command("init").description("initialize project"),o.program.command("install").description("install requirements and dependencies"),o.program.command("save").description("save project").option("-m, --message <message>","commit message"),o.program.command("new").argument("<patch|update|upgrade>").description("create new patch, update or upgrade."),o.program.command("deploy").option("npm").description("deploy project"),o.program.command("template").option("list").option("install").description("Project commands"),o.program.parse(process.argv);const t=o.program.args[0],n=o.program.args[1],r=o.program.args[2],c=o.program.args.slice(2);"ping"===t&&l.terminal.success("pong"),"init"===t&&i.Cli.init(c),"install"===t&&i.Cli.install(),"save"===t&&i.Cli.save(r),"new"===t&&("patch"===n&&i.Cli.new.patch(),"update"===n&&i.Cli.new.update(),"upgrade"===n&&i.Cli.new.upgrade()),"template"===t&&("list"===n&&i.Cli.template.list(),"install"===n&&i.Cli.template.install()),"deploy"===t&&("npm"===n?i.Cli.deploy({npm:!0}):i.Cli.deploy()),(0,a.checkUpdate)()}t.default=c,c()},533:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Git=void 0;const r=n(77),o=n(784),s=n(257),i=n(997);n(650);class a{}a.requirements=i.Requirements,a.init=s.Init,a.configure=o.Configure,a.branchGuard=r.branchGuard,t.Git=a},77:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.branchGuard=void 0;const r=n(39),o=n(312),s=n(357);t.branchGuard=async()=>{const e=new o.Command("git branch --show-current");e.error&&(s.terminal.error(e.error),process.exit(1)),r.protectedBranches.includes(e.toString())&&(s.terminal.log("error","You cannot save changes on production branch."),console.log('\n\nIf you want update production branch, use [1mdt deploy[0m command" on version branch.\n\n[1mExample:[0m\n[1mdt new patch[0m (create new patch version)\n[1mdt save[0m (save changes)\n[1mdt deploy[0m (deploy new version to production branch)\n'),process.exit(1))}},784:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Configure=void 0;const r=n(312),o=n(357),s=n(887),i=n(650);t.Configure=async()=>{let e=new r.Command("git config --global user.name");if(!e.result){o.terminal.logInline("user","Git user is not configured."),e=await i([{type:"text",name:"name",message:"Enter your name"}]);const t=new r.Command(`git config --global user.name "${e}"`);t.error&&(o.terminal.error(t.error),process.exit(1)),o.terminal.log("user","Git user has been configured.")}let t=new r.Command("git config --global user.email");if(!t.result){o.terminal.logInline("email","Git email is not configured."),t=await i([{type:"text",name:"email",message:"Enter your email"}]);const e=new r.Command(`git config --global user.email "${t}"`);e.error&&(o.terminal.error(e.error),process.exit(1)),o.terminal.log("email","Git email has been configured.")}const n=new s.Gpg;await n.configure()}},887:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Gpg=void 0;const r=n(312),o=n(357);t.Gpg=class{constructor(){this.KEY_ID_REGEX=/\/([A-F0-9]{16,})/i}async configure(){const e=new r.Command("git config --global commit.gpgsign true");if(e.error&&(o.terminal.error(e.error),process.exit(1)),!new r.Command("git config --global user.signingkey").result){o.terminal.log("crypt","GPG key is not configured.");const e=this.getExistingKeyId();if(e)o.terminal.log("crypt",`Existing GPG key found with ID ${e}`),await this.setGitConfigWithKeyId(e),this.printPublicKey(e);else{o.terminal.log("decrypt","No existing GPG key found.");const e=await this.generateGpgKey();await this.setGitConfigWithKeyId(e),this.printPublicKey(e)}}}async getExistingKeyId(){var e;try{const t=new r.Command("gpg --list-keys --keyid-format LONG").toString().match(this.KEY_ID_REGEX);return null!==(e=null==t?void 0:t[1])&&void 0!==e?e:null}catch(e){return o.terminal.error("No GPG keys",e),null}}async generateGpgKey(){const e=n(650);o.terminal.log("crypt","Generating new GPG key...");const{passphrase:t}=await e([{type:"password",name:"passphrase",message:"Enter a passphrase for your GPG key"}]),s=new r.Command("git config --global user.name").toString(),i=new r.Command("git config --global user.email").toString(),a=new r.Command(`gpg --batch --passphrase "${t}" --quick-gen-key "${s} <${i}>"`);a.error&&(o.terminal.error(a.error),process.exit(1));const l=this.getExistingKeyId();return l?o.terminal.success(`New GPG key generated with ID ${l}`):o.terminal.error("Error generating GPG key"),l}async printPublicKey(e){const t=n(650);o.terminal.log("crypt",`\nPublic key with ID ${e}:`),new r.Command(`gpg --armor --export ${e}`,{silent:!0}),await t({type:"text",name:"answer",message:"Press enter after copy and paste your public key to your GitHub account. (Settings > SSH and GPG keys > New GPG key)"})}async setGitConfigWithKeyId(e){const t=new r.Command(`git config user.signingkey ${e}`);t.error&&(o.terminal.error(t.error),process.exit(1)),o.terminal.success("Successfully configured GPG key")}}},257:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Init=void 0;const r=n(784),o=n(312),s=n(357);t.Init=async()=>{const e=new o.Command("git rev-parse --show-toplevel");if(e.error&&e.error.includes("not a git repository")){const e=new o.Command("git init");e.error&&(s.terminal.error(e.error),process.exit(1))}const t=new o.Command("git branch -M main");t.error&&(s.terminal.error(t.error),process.exit(1)),await(0,r.Configure)()}},39:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.protectedBranches=void 0,t.protectedBranches=["master","main","production","prod","release","current"]},997:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Requirements=void 0;const r=n(312),o=n(357);t.Requirements=async()=>{if(new r.Command("choco --version").error){o.terminal.logInline("package","Installing chocolatey...");const e=new r.Command("powershell -NoProfile -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\"");e.error&&(o.terminal.label("red","error"),o.terminal.error(e.error),process.exit(1)),o.terminal.label("green","OK")}if(new r.Command("git --version").error){o.terminal.logInline("git","Installing git...");const e=new r.Command("choco install git -y");e.error&&(o.terminal.label("red","error"),o.terminal.error(e.error),process.exit(1)),o.terminal.label("green","OK")}if(new r.Command("gpg --version").error){o.terminal.logInline("crypt","Installing gnupg...");const e=new r.Command("choco install gnupg -y");e.error&&(o.terminal.label("red","error"),o.terminal.error(e.error),process.exit(1)),o.terminal.label("green","OK")}if(!new r.Command("gpg --list-secret-keys --keyid-format LONG")){const e=n(650),t=[{type:"text",name:"name",message:"What is your name?",validate:e=>!(e.length<2)||"Name must be at least 2 characters long"},{type:"text",name:"email",message:"What is your email?",validate:e=>!(e.length<2)||"Email must be at least 2 characters long"},{type:"password",name:"password",message:"What is your signature password?",validate:e=>!(e.length<2)||"Password must be at least 2 characters long"}],s=await e(t);o.terminal.logInline("crypt","Creating gpg key...");const i=new r.Command(`gpg --batch --full-generate-key <<EOF\n\t\t%echo Generating a basic OpenPGP key\n\t\tKey-Type: RSA\n\t\tKey-Length: 4096\n\t\tSubkey-Type: RSA\n\t\tSubkey-Length: 4096\n\t\tName-Real: ${s.name}\n\t\tName-Email: ${s.email}\n\t\tExpire-Date: 0\n\t\tPassphrase: ${s.password}\n\t\t%commit\n\t\t%echo done\n\t\tEOF`);i.error&&(o.terminal.label("red","error"),o.terminal.error(i.error),process.exit(1)),o.terminal.label("green","OK"),o.terminal.log("crypt","Your gpg key is:"),console.log(i);const a={type:"text",name:"enter",message:"Add this key to github and press enter to continue..."};await e(a)}}},475:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Cli=void 0;const r=n(471),o=n(264),s=n(491),i=n(310),a=n(74),l=n(799);class c{}c.save=a.Save,c.new=i.New,c.init=o.Init,c.install=s.Install,c.template=l.Template,c.deploy=r.Deploy,t.Cli=c},471:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Deploy=void 0;const r=n(475),o=n(514),s=n(312),i=n(357);t.Deploy=async e=>{await r.Cli.save(),i.terminal.log("package","Starting deployment...");const t=o.Project.rootDir();process.chdir(t),await o.Project.requirements();const n=(await o.Project.packageJson()).version;i.terminal.log("git","Checking out to production branch...");const a=new s.Command("git checkout main");a.error&&(i.terminal.log("error",a.error),process.exit(1)),i.terminal.logInline("pull","Pulling changes...");const l=new s.Command("git pull");l.error&&(i.terminal.log("error",l.error),process.exit(1)),i.terminal.label("green","DONE"),i.terminal.logInline("merge",`Promoting version ${n} into production...`);const c=new s.Command(`git merge ${n}`);c.error&&(i.terminal.log("error",c.error),process.exit(1)),i.terminal.label("green","DONE"),i.terminal.logInline("push","Pushing changes...");const p=new s.Command("git push");p.error&&(i.terminal.log("error",p.error),process.exit(1)),i.terminal.label("green","DONE"),i.terminal.logInline("git","Checking out to version branch...");const m=new s.Command(`git checkout ${n}`);if(m.error&&(i.terminal.log("error",m.error),process.exit(1)),i.terminal.label("green","DONE"),await r.Cli.save(),null==e?void 0:e.npm){i.terminal.logInline("npm","Publishing release on npm...");const e=new s.Command("npm publish");e.error&&(i.terminal.log("error",e.error),process.exit(1))}i.terminal.log("success",`Successfully deployed version ${n}!`)}},264:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Init=void 0;const r=n(475),o=n(514),s=n(357);t.Init=async e=>{s.terminal.log("package","Initializing new project..."),await o.Project.init(),await r.Cli.save({force:!0}),await r.Cli.new.patch(),s.terminal.success("New project initialized!")}},491:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Install=void 0;const r=n(533),o=n(514),s=n(357);t.Install=async e=>{s.terminal.log("package","Installing requirements and dependencies..."),await r.Git.requirements(),await o.Project.installRequirements(),await o.Project.installDependencies(),s.terminal.success("Requirements and dependencies installed!")}},310:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.New=void 0;const r=n(351),o=n(917),s=n(458);class i{}i.patch=r.Patch,i.update=o.Update,i.upgrade=s.Upgrade,t.New=i},351:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Patch=void 0;const r=n(475),o=n(514),s=n(312),i=n(357);t.Patch=async e=>{const t=o.Project.rootDir();process.chdir(t);const n=await o.Project.packageJson(),l=n.version,c=n.version,p=`${a(c[0])}.${a(c[2])}.${a(c[4])+1}`;i.terminal.logInline("branch","Creating new version branch...");const m=new s.Command(`git checkout -b ${p}`);m.error&&(i.terminal.error(m.error),process.exit(1)),i.terminal.label("cyan","CREATED"),i.terminal.logInline("update","Updating version...");const d=new s.Command(`npm version ${p}`);d.error&&(i.terminal.error(d.error),process.exit(1)),i.terminal.label("cyan","UPDATED"),await r.Cli.save(e),i.terminal.log("version","Project version patch created"),i.terminal.log("version",`Old version: ${l}`),i.terminal.log("version",`New version: ${p}`),i.terminal.log("version","Run [1mdt save[0m to save changes"),i.terminal.log("version","Run [1mdt deploy[0m to publish changes")};const a=e=>parseInt(e,10)},917:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Update=void 0;const r=n(475),o=n(514),s=n(312),i=n(357);t.Update=async e=>{await r.Cli.save(e);const t=o.Project.rootDir();process.chdir(t);const n=await o.Project.packageJson(),l=n.version,c=n.version,p=`${a(c[0])}.${a(c[2])+1}.0`;i.terminal.logInline("branch","Creating new version branch...");const m=new s.Command(`git checkout -b ${p}`);m.error&&(i.terminal.error(m.error),process.exit(1)),i.terminal.label("cyan","CREATED"),i.terminal.logInline("update","Updating version...");const d=new s.Command(`npm version ${p}`);d.error&&(i.terminal.error(d.error),process.exit(1)),i.terminal.label("cyan","UPDATED"),await r.Cli.save(e),i.terminal.log("version","Project version update created"),i.terminal.log("version",`Old version: ${l}`),i.terminal.log("version",`New version: ${p}`),i.terminal.log("version","Run [1mdt save[0m to save changes"),i.terminal.log("version","Run [1mdt deploy[0m to publish changes")};const a=e=>parseInt(e,10)},458:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Upgrade=void 0;const r=n(475),o=n(514),s=n(312),i=n(357);t.Upgrade=async e=>{await r.Cli.save(e);const t=o.Project.rootDir();process.chdir(t);const n=await o.Project.packageJson(),l=n.version,c=n.version,p=`${a(c[0])+1}.0.0`;i.terminal.logInline("branch","Creating new version branch...");const m=new s.Command(`git checkout -b ${p}`);m.error&&(i.terminal.error(m.error),process.exit(1)),i.terminal.label("cyan","CREATED"),i.terminal.logInline("update","Upgrading version...");const d=new s.Command(`npm version ${p}`);d.error&&(i.terminal.error(d.error),process.exit(1)),i.terminal.label("cyan","UPDATED"),await r.Cli.save(e),i.terminal.log("version","Project version upgrade created"),i.terminal.log("version",`Old version: ${l}`),i.terminal.log("version",`New version: ${p}`),i.terminal.log("version","Run [1mdt save[0m to save changes"),i.terminal.log("version","Run [1mdt deploy[0m to publish changes")};const a=e=>parseInt(e,10)},74:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Save=void 0;const r=n(533),o=n(514),s=n(312),i=n(357);t.Save=async e=>{await r.Git.requirements();const t=new s.Command("git rev-parse --show-toplevel");t.error&&(t.error.includes("not a git repository")&&(i.terminal.error("Git is not initialized, run [1mdt init[0m command first"),process.exit(1)),i.terminal.error(t.error),process.exit(1)),e&&!e.force&&await r.Git.branchGuard();const n=o.Project.rootDir();await o.Project.requirements();const a=await o.Project.packageJson();process.chdir(n),i.terminal.log("save","Saving changes..."),i.terminal.logInline("search","Searching for changes...");const l=new s.Command("git status --porcelain");if(l.error&&(i.terminal.error(l.error),process.exit(1)),l.result&&l.result.length>0){i.terminal.label("cyan","FOUND");const e=l.toString().trim().split("\n");i.terminal.log("update","Changed files:"),e.forEach((e=>{i.terminal.log("file",e.trim())})),i.terminal.logInline("stack","Stacking changed files to be commited...");const t=new s.Command("git add .");t.error&&(i.terminal.label("red","error"),i.terminal.log("error",t.error),process.exit(1)),i.terminal.label("green","DONE"),i.terminal.logInline("password","Waiting for signature passphrase...");const n=new s.Command(`git commit -S -m "${a.version}"`);if(n.error&&(i.terminal.label("red","error"),i.terminal.error(n.result),process.exit(1)),i.terminal.label("cyan","SIGNED"),i.terminal.logInline("commit","Commiting changes..."),new s.Command("sleep 1"),i.terminal.label("green","DONE"),new s.Command("git rev-parse --abbrev-ref --symbolic-full-name @{u}").error){i.terminal.logInline("push","Creating upstream...");const e=new s.Command("git rev-parse --abbrev-ref HEAD").toString(),t=new s.Command(`git push --set-upstream origin ${e}`);t.error&&(i.terminal.label("red","error"),i.terminal.log("error",t.error),process.exit(1)),i.terminal.label("green","DONE")}else{i.terminal.logInline("push","Pushing changes...");const e=new s.Command("git push");e.error&&(i.terminal.label("red","error"),i.terminal.log("error",e.error),process.exit(1)),i.terminal.label("green","DONE")}i.terminal.logInline("push","Pushing tags...");const r=new s.Command("git push --tags");r.error&&(i.terminal.log("error",r.error),process.exit(1)),i.terminal.label("green","DONE"),i.terminal.log("success","Changes saved!")}else i.terminal.label("green","none"),i.terminal.success("All files are up to date")}},799:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Template=void 0;const r=n(51),o=n(254);class s{}s.list=o.List,s.install=r.Install,t.Template=s},51:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Install=void 0;const r=n(533),o=n(514),s=n(872),i=n(650);t.Install=async()=>{await r.Git.requirements(),await r.Git.branchGuard(),await o.Project.requirements(),(new a).chooseTemplate()};class a{async chooseTemplate(){const e=await i({type:"select",name:"value",message:"Project type",choices:[{title:"Browser",value:"browser"},{title:"API",value:"api"},{title:"CLI",value:"cli"},{title:"Gui",value:"gui"},{title:"Other",value:"Other"}]});this.chooseLanguage(e.value)}async chooseLanguage(e){const t=await(async()=>"browser"===e?(await i({type:"select",name:"value",message:"Language",choices:[{title:"Javascript",value:"javascript"},{title:"Typescript",value:"typescript"}]})).value:"api"===e||"cli"===e?(await i({type:"select",name:"value",message:"Language",choices:[{title:"Javascript",value:"javascript"},{title:"Typescript",value:"typescript"},{title:"Python",value:"python"},{title:"Go",value:"go"}]})).value:"gui"===e?(await i({type:"select",name:"value",message:"Language",choices:[{title:"Python",value:"python"}]})).value:void 0)();this.chooseFramework(e,t)}async chooseFramework(e,t){if("browser"===e){if("javascript"===t)switch((await i({type:"select",name:"value",message:"Framework",choices:[{title:"React",value:"react"},{title:"Next",value:"next"}]})).value){case"react":new s.TemplateInstaller("react-javascript").install();break;case"next":new s.TemplateInstaller("next-javascript").install()}if("typescript"===t)switch((await i({type:"select",name:"value",message:"Framework",choices:[{title:"React",value:"react"},{title:"Next",value:"next"}]})).value){case"react":new s.TemplateInstaller("react-typescript").install();break;case"next":new s.TemplateInstaller("next-typescript").install()}}if("api"===e){if("javascript"===t&&"express"===(await i({type:"select",name:"value",message:"Framework",choices:[{title:"Express",value:"express"}]})).value&&new s.TemplateInstaller("express-javascript").install(),"typescript"===t&&"express"===(await i({type:"select",name:"value",message:"Framework",choices:[{title:"Express",value:"express"}]})).value&&new s.TemplateInstaller("express-typescript").install(),"python"===t)switch((await i({type:"select",name:"value",message:"Framework",choices:[{title:"Flask",value:"flask"},{title:"Django",value:"django"}]})).value){case"flask":new s.TemplateInstaller("flask-python").install();break;case"django":new s.TemplateInstaller("django-python").install()}"go"===t&&"gin"===(await i({type:"select",name:"value",message:"Framework",choices:[{title:"Gin",value:"gin"}]})).value&&new s.TemplateInstaller("gin-go").install()}"cli"===e&&("javascript"===t&&"cli-javascript"===(await i({type:"select",name:"value",message:"Framework",choices:[{title:"Commander",value:"commander-javascript"}]})).value&&new s.TemplateInstaller("commander-javascript").install(),"typescript"===t&&"cli-typescript"===(await i({type:"select",name:"value",message:"Framework",choices:[{title:"Commander",value:"commander-typescript"}]})).value&&new s.TemplateInstaller("commander-typescript").install(),"python"===t&&"click"===(await i({type:"select",name:"value",message:"Framework",choices:[{title:"Click",value:"click"}]})).value&&new s.TemplateInstaller("click-python").install()),"gui"===e&&"python"===t&&"tkinter"===(await i({type:"select",name:"value",message:"Framework",choices:[{title:"Tkinter",value:"tkinter"}]})).value&&new s.TemplateInstaller("tkinter-python").install()}}},254:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.List=void 0;const r=n(357);t.List=async()=>{r.terminal.log("list","Available templates:"),console.log(" "),console.log("     "+"Name".padEnd(20)+"Description"),console.log("     "+"----".padEnd(20)+"-----------"),[{icon:"js",name:"cli-javascript",description:"Javascript cli template"},{icon:"ts",name:"cli-typescript",description:"Typescript cli template"},{icon:"py",name:"cli-python",description:"Python cli template"},{icon:"go",name:"cli-go",description:"Go cli template"},{icon:"js",name:"api-javascript",description:"Javascript api template"},{icon:"ts",name:"api-typescript",description:"Typescript api template"},{icon:"py",name:"api-python",description:"Python api template"},{icon:"go",name:"api-go",description:"Go api template"},{icon:"js",name:"react-javascript",description:"Javascript react template"},{icon:"ts",name:"react-typescript",description:"Typescript react template"}].forEach((e=>{r.terminal.log(e.icon,"  "+e.name.padEnd(20)+e.description)}))}},514:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Project=void 0;const r=n(802),o=n(431),s=n(890),i=n(21),a=n(197),l=n(11),c=n(37);class p{}p.requirements=l.Requirements,p.init=o.Init,p.rootDir=c.RootDir,p.packageJson=a.PackageJson,p.savePackageJson=a.SavePackageJson,p.defaultFiles=r.DefaultFiles,p.installDependencies=s.InstallDependencies,p.installRequirements=i.InstallRequirements,t.Project=p},802:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.DefaultFiles=void 0;const i=s(n(147)),a=n(514),l=n(357);t.DefaultFiles=async()=>{const e=a.Project.packageJson(),t=a.Project.rootDir();i.existsSync(`${t}/README.md`)||i.writeFileSync(`${t}/README.md`,`\n# ${e.name}\n# ${e.description}\n\n## Install\n\`\`\`bash\nnpm install\n\`\`\`\n\n## Test\n\`\`\`bash\nnpm run test\n\`\`\`\n\n## Watch (for development)\n\`\`\`bash\nnpm run dev\n\n## Run (for development)\nnpm run start\n\`\`\`\n\n## Build (for production)\n\`\`\`bash\nnpm run build\n\`\`\`\nAfter build, executable files will be in the \`\`dist\`\` folder.\n            `),l.terminal.success("README.md created!")}},431:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Init=void 0;const i=s(n(147)),a=n(533),l=n(514),c=n(312),p=n(357),m=n(650);t.Init=async()=>{if(a.Git.init(),new c.Command("git remote get-url origin").error){const e=await m({type:"text",name:"answer",message:"Enter the url of an empty repository:"}),t=new c.Command(`git remote add origin ${e.answer}`);t.error&&(p.terminal.error(t.error),process.exit(1))}const e=l.Project.rootDir();if(!i.existsSync(`${e}/package.json`)){const t=new c.Command("npm init -y");t.error&&(p.terminal.error(t.error),process.exit(1));const n=new c.Command(`sed -i 's/"version": "1.0.0"/"version": "0.0.0"/g' ${e}/package.json`);n.error&&(p.terminal.error(n.error),process.exit(1))}await l.Project.defaultFiles()}},890:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InstallDependencies=void 0;const r=n(312),o=n(357);t.InstallDependencies=async e=>{o.terminal.log("package","Installing dependencies..."),new r.Command("npm install").error&&(o.terminal.error("Error installing dependencies"),process.exit(1)),o.terminal.success("Dependencies installed!")}},21:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InstallRequirements=void 0;const r=n(312),o=n(357);t.InstallRequirements=async e=>{o.terminal.log("package","Installing requirements...");const t=new r.Command("npm install -g cpx");t.error&&o.terminal.error(t.error);const n=new r.Command("npm install -g wget");n.error&&o.terminal.error(n.error);const s=new r.Command("npm install -g curl");s.error&&o.terminal.error(s.error);const i=new r.Command("npm install -g prettier");i.error&&o.terminal.error(i.error);const a=new r.Command("npm install -g eslint");a.error&&o.terminal.error(a.error);const l=new r.Command("npm install -g zip");l.error&&o.terminal.error(l.error),o.terminal.success("Requirements installed!")}},197:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.SavePackageJson=t.PackageJson=void 0;const i=s(n(147)),a=n(514);t.PackageJson=()=>{const e=a.Project.rootDir();return JSON.parse(i.readFileSync(`${e}/package.json`).toString())},t.SavePackageJson=async e=>{const t=a.Project.rootDir();i.writeFileSync(`${t}/package.json`,JSON.stringify(e,null,2))}},11:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Requirements=void 0;const i=s(n(147)),a=n(312),l=n(357);t.Requirements=async()=>{const e=new a.Command("git rev-parse --show-toplevel").toString();i.existsSync(`${e}/package.json`)||(l.terminal.error("package.json not found, run [1mdt init[0m command first"),process.exit(1))}},37:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RootDir=void 0;const r=n(312),o=n(357);t.RootDir=()=>{const e=new r.Command("git rev-parse --show-toplevel");return e.error&&(o.terminal.error(e.error),process.exit(1)),e.toString()}},67:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.checkUpdate=void 0;const o=r(n(147)),s=r(n(687)),i=n(357);t.checkUpdate=async()=>{const e=JSON.parse(o.default.readFileSync("./package.json","utf8")).version,t=await async function(){return new Promise(((e,t)=>{s.default.get("https://raw.githubusercontent.com/hermannhahn/dt/main/package.json",(n=>{let r="";n.on("data",(e=>{r+=e})),n.on("end",(()=>{try{const t=JSON.parse(r);e(t.version)}catch(e){t(e)}}))})).on("error",(e=>{t(e)}))}))}();-1===e.toString().localeCompare(t,void 0,{numeric:!0})&&i.terminal.log("new",`Update available: [36m[1m${e}[0m -> [5m[33m[1m${t}[0m`)}},312:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Command=void 0;const r=n(81);t.Command=class{constructor(e,t){this.error=!1,this.result="";try{if(t){if(t.silent){const t=(0,r.execSync)(e,{stdio:"inherit"});this.result=t}}else{const t=(0,r.execSync)(e,{stdio:"pipe"});this.result=t}}catch(e){this.error=e.message}}toString(){return this.result.toString().trim()}}},703:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Icons=void 0;const n={success:"✔",done:"✅",doneerror:"⛏️",tick:"🗸",unchecked:"☐",checked:"☑",error:"❌",ok:"🆗",free:"🆓",new:"🆕",film:"🎞️",mic:"🎙️",volumeup:"🔊",volumedown:"🔈",mixer:"🎚️",dice:"🎲",label:"🏷️",break:"🛑",breakheart:"💔",lamp:"💡",zzz:"💤",fail:"❌",stop:"⛔",folder:"📁",pin:"📌",clip:"📎",rule:"📏",lib:"📕",antena:"📡",email:"📧",letterbox:"📫",emptyletterbox:"📭",libs:"📚",dollar:"💲",smartphone:"📱",signal:"📶",tape:"📼",refresh:"🔄",joystick:"🕹️",mouse:"🖱️",list:"📋",add:"➕",keyboard:"⌨️",speechballoon:"💬",update:"🔄",trash:"🗑️",map:"🗺️",earth:"🌍",archive:"🗃️",index:"🗂️",bookmark:"🔖",underconstruction:"🚧",siren:"🚨",flag:"🚩",nosmoke:"🚭",shield:"🛡️",tool:"🛠️",laptop:"💻",minidisk:"💽",cdrom:"💿",bug:"🐞",warn:"⚠️",info:" ℹ️",heart:"❤️",pen:"✒️",library:"📚",push:"📤",pull:"📥",commit:"📝",staging:"📦",stack:"📚",branch:"🌱",merge:"🔀",package:"📦",file:"📄",save:"💾",search:"🔎",sign:"✍",password:"🔑",question:"❓",work:"🔨",star:"⭐",item:"📌",gear:"⚙️",energy:"⚡",clock:"⏰",time:"⏱",debug:"🐛",terminal:"🖥",cloud:"☁",rain:"🌧",lightning:"🌪",cloudsun:"🌤",shootingstar:"🌠",starshining:"🌟",sun:"🌞",moon:"🌒",play:"▶",playpause:"⏯",user:"👤",party:"🎉",target:"🎯",launch:"🚀",mosquito:"🦟",blood:"🩸",bomb:"💣",watch:"⌚",store:"🏪",timer:"⌛",phone:"☎",phonecall:"📞",phonehangup:"📴",phoneincoming:"📲",phoneoutgoing:"📳",phonevoicemail:"📩",phonevibrate:"📳",phonealert:"📵",phonebattery:"🔋",powerplug:"🔌",arrowLeft:"⬅️",arrowRight:"➡️",arrowUp:"⬆️",arrowDown:"⬇️",fingerUp:"👆",fingerDown:"👇",fingerLeft:"👈",fingerRight:"👉",dot:"⚪",dotBlack:"⚫",dotRed:"🔴",dotGreen:"🟢",dotBlue:"🔵",dotYellow:"🟡",dotPurple:"🟣",dotOrange:"🟠",dotBrown:"🟤",git:"🐙",lock:"🔒",unlock:"🔓",crypt:"🔐",decrypt:"🔏"};t.Icons=class{constructor(e){this.icon=n[e],this.icon||(this.icon=this.iconLabel(e))}toString(){return this.icon}iconLabel(e){switch(e=e.toString().slice(0,4).toLowerCase()){case"js":return"[44m[37mJS[0m";case"ts":return"[44m[37mTS[0m";case"html":return"[47m[37mHTML[0m";case"css":return"[46m[37mCSS[0m";default:return"[47m[30m"+e.toUpperCase()+"[0m"}}}},872:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.TemplateInstaller=void 0;const i=s(n(147)),a=n(312),l=n(248),c=n(382),p=n(469),m=n(442),d=n(146);t.TemplateInstaller=class{constructor(e){switch(this.name=e,e){case"commander-typescript":this.template=new l.CommanderTypescript;break;case"react-typescript":this.template=new m.ReactTypescript;break;case"next-typescript":this.template=new p.NextTypescript;break;case"express-typescript":this.template=new c.ExpressTypescript;break;case"tkinter-python":this.template=new d.TkinterPython}}async install(){this.createProjectFolders(),this.createProjectFiles(),this.installDependencies()}createProjectFolders(){this.template.folders.forEach((e=>{i.mkdirSync(e)}))}createProjectFiles(){this.template.files.forEach((e=>{i.writeFileSync(e.path,e.content)}))}installDependencies(){"tkinter-python"===this.name?this.installPythonDependencies():this.installDevDependencies(),this.installProjectDependencies(),this.installGlobalDependencies()}installPythonDependencies(){for(const e of this.template.dependencies)new a.Command(`pip install ${this.template.dependencies.toString()}`)}installDevDependencies(){for(const e of this.template.devDependencies)new a.Command(`npm i -D ${this.template.devDependencies.toString()}`)}installProjectDependencies(){for(const e of this.template.dependencies)new a.Command(`npm i ${this.template.dependencies.toString()}`)}installGlobalDependencies(){for(const e of this.template.globalDependencies)new a.Command(`npm i -g ${this.template.globalDependencies.toString()}`)}addScript(){const e=this.template.scripts,t=JSON.parse(i.readFileSync("package.json").toString());t.scripts={...t.scripts,...e},i.writeFileSync("package.json",JSON.stringify(t,null,2))}}},248:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CommanderTypescript=void 0,t.CommanderTypescript=class{constructor(){this.name="commander-typescript",this.folders=["src","compile","build","dist"],this.files=[{path:"tsconfig.json",content:'\n{\n    "compilerOptions": {\n        "target": "es2018",\n        "module": "commonjs",\n        "baseUrl": ".",\n        "outDir": "compile",\n        "rootDir": "src",\n        "strict": true,\n        "forceConsistentCasingInFileNames": true,\n        "esModuleInterop": true,\n        "sourceMap": true,\n        "typeRoots": ["node_modules/@types"],\n        "types": ["node"],\n        "paths": {\n            "*": ["src/*"]\n        }\n    },\n    "include": ["src/**/*"],\n    "exclude": [\n        "node_modules",\n        "**/*.spec.ts",\n        "**/*.test.ts",\n        "dist",\n        "compile",\n        "build"\n    ]\n}\n            '},{path:"src/index.ts",content:"console.log('Hello world!')"},{path:".prettierrc",content:'\n{\n    "printWidth": 80,\n    "tabWidth": 4,\n    "useTabs": false,\n    "semi": true,\n    "singleQuote": true,\n    "trailingComma": "es5",\n    "bracketSpacing": true,\n    "arrowParens": "avoid",\n    "endOfLine": "lf"\n}\n            '},{path:".eslintrc.js",content:'\nmodule.exports = {\n    root: true,\n    env: {\n        es6: true,\n        node: true,\n        commonjs: true,\n    },\n    parser: "@babel/eslint-parser",\n    parserOptions: {\n        ecmaVersion: 2018,\n        sourceType: "module",\n    },\n    plugins: ["import"],\n    extends: [\n        "eslint:recommended",\n        "plugin:import/errors",\n        "plugin:import/warnings",\n        "plugin:import/typescript",\n        "prettier",\n    ],\n    rules: {\n        "import/no-unresolved": "error",\n        "import/named": "error",\n        "import/default": "error",\n        "import/namespace": "error",\n        "import/no-named-as-default": "error",\n        "import/no-named-as-default-member": "error",\n        "import/no-extraneous-dependencies": [\n            "error",\n            { devDependencies: ["**/*.test.js", "**/*.spec.js"] },\n        ],\n        "no-unused-vars": ["error", { argsIgnorePattern: "^_" }],\n        semi: ["error", "never"],\n        "comma-dangle": ["error", "always-multiline"],\n        quotes: ["error", "single"],\n    },\n}\n            '},{path:".babelrc",content:'\n{\n    "presets": [\n        "@babel/preset-env",\n        "@babel/preset-typescript"\n    ]\n}\n            '},{path:"webpack.config.js",content:'\nconst path = require(\'path\')\nmodule.exports = {\n    entry: {\n        app: "./src/index.ts",\n    },\n    target: "node",\n    mode: "production",\n    output: {\n        path: path.resolve(__dirname, "build"),\n        filename: "[name].js",\n        libraryTarget: "commonjs2",\n    },\n    resolve: {\n        extensions: [".ts", ".js"],\n        modules: [path.resolve(__dirname, "src"), "node_modules"],\n    },\n    module: {\n        rules: [\n            {\n                test: /.ts$/,\n                use: [\n                    {\n                        loader: "babel-loader",\n                        options: {\n                            presets: [["@babel/preset-env", { targets: "defaults" }]],\n                        },\n                    },\n                    "ts-loader",\n                ],\n                exclude: [/node_modules/],\n            },\n        ],\n    },\n    // adicionando a configuração para ignorar os módulos do node_modules\n    externals: [\n        nodeExternals(),\n        {\n            "./": "./",\n            "**": "./src/**/*",\n        },\n    ],\n    plugins: [\n        {\n            apply: (compiler) => {\n                compiler.hooks.afterEmit.tap("AfterEmitPlugin", (compilation) => {\n                    execSync("npm run compile")\n                })\n            },\n        },\n    ],\n}\n            '},{path:"jest.config.js",content:'\nmodule.exports = {\n    roots: ["./src"],\n    testEnvironment: \'node\',\n    transform: {\n        "^.+\\.tsx?$": "ts-jest",\n    },\n    testRegex: "(/__tests__/.*|(\\.|/)(test|spec))\\.tsx?$",\n    moduleFileExtensions: ["ts", "tsx", "js", "jsx", "json", "node"],\n}\n            '},{path:"test/index.test.ts",content:"\nimport { sum } from '../src/index'\n\ndescribe('sum', () => {\n    it('should sum two numbers', () => {\n        expect(sum(1, 2)).toBe(3)\n    })\n})\n            "}],this.scripts=[{name:"eslint",command:"echo 'Linting...' && eslint src/**/*.ts --fix --ext .ts,.js,.json --ignore-path .gitignore && echo 'Linted!'"},{name:"eslint:check",command:"echo 'Linting...' && eslint src/**/*.ts --ext .ts,.js,.json --ignore-path .gitignore && echo 'Linted!'"},{name:"lint-staged",command:"echo 'Linting...' && lint-staged && echo 'Linted!'"},{name:"prettier",command:"echo 'Formatting...' && prettier --write \"src/**/*.ts\" && echo 'Formatted!'"},{name:"prettier:check",command:"echo 'Formatting...' && prettier --check \"src/**/*.ts\" && echo 'Format Checked!'"},{name:"dev",command:'nodemon --watch src --exec "webpack --mode development --watch" --ext *.ts,*.js,*.json'},{name:"build",command:"title Building... && webpack --mode production && title Built!"},{name:"compile",command:"title Compiling... && pkg build/index.js --target node18-win-x64,node18-macos-x64,node18-linux-x64 --out-dir ./dist && title Compiled!"},{name:"start",command:"node build/index.js"}],this.devDependencies=["typescript","@babel/core","@babel/eslint-parser","@babel/preset-env","@babel/preset-typescript","@types/node","@types/jest","@types/prompts","@types/dotenv","eslint-plugin-import","eslint-plugin-prettier","eslint-config-prettier","prettier-eslint","prettier-eslint-cli","prettier-eslint-config","prettier-eslint-config-prettier","babel","eslint","prettier","ts-loader","node-externals","webpack","webpack-cli","webpack-node-externals","jest","ts-node","ts-jest"],this.dependencies=["commander","@commander-js/extra-typings","dotenv","prompts"],this.globalDependencies=["nodemon","pkg","ts-node","lint-staged","typescript","eslint","prettier","jest","webpack-cli"]}}},382:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExpressTypescript=void 0,t.ExpressTypescript=class{constructor(){this.name="express-typescript",this.folders=["src","compile","build","dist"],this.files=[{path:"tsconfig.json",content:'\n{\n    "compilerOptions": {\n        "target": "es2018",\n        "module": "commonjs",\n        "baseUrl": ".",\n        "outDir": "compile",\n        "rootDir": "src",\n        "strict": true,\n        "forceConsistentCasingInFileNames": true,\n        "esModuleInterop": true,\n        "sourceMap": true,\n        "typeRoots": ["node_modules/@types"],\n        "types": ["node"],\n        "paths": {\n            "*": ["src/*"]\n        }\n    },\n    "include": ["src/**/*"],\n    "exclude": [\n        "node_modules",\n        "**/*.spec.ts",\n        "**/*.test.ts",\n        "dist",\n        "compile",\n        "build"\n    ]\n}\n            '},{path:"src/index.ts",content:"console.log('Hello world!')"},{path:".prettierrc",content:'\n{\n    "printWidth": 80,\n    "tabWidth": 4,\n    "useTabs": false,\n    "semi": true,\n    "singleQuote": true,\n    "trailingComma": "es5",\n    "bracketSpacing": true,\n    "arrowParens": "avoid",\n    "endOfLine": "lf"\n}\n            '},{path:".eslintrc.js",content:'\nmodule.exports = {\n    root: true,\n    env: {\n        es6: true,\n        node: true,\n        commonjs: true,\n    },\n    parser: "@babel/eslint-parser",\n    parserOptions: {\n        ecmaVersion: 2018,\n        sourceType: "module",\n    },\n    plugins: ["import"],\n    extends: [\n        "eslint:recommended",\n        "plugin:import/errors",\n        "plugin:import/warnings",\n        "plugin:import/typescript",\n        "prettier",\n    ],\n    rules: {\n        "import/no-unresolved": "error",\n        "import/named": "error",\n        "import/default": "error",\n        "import/namespace": "error",\n        "import/no-named-as-default": "error",\n        "import/no-named-as-default-member": "error",\n        "import/no-extraneous-dependencies": [\n            "error",\n            { devDependencies: ["**/*.test.js", "**/*.spec.js"] },\n        ],\n        "no-unused-vars": ["error", { argsIgnorePattern: "^_" }],\n        semi: ["error", "never"],\n        "comma-dangle": ["error", "always-multiline"],\n        quotes: ["error", "single"],\n    },\n}\n            '},{path:".babelrc",content:'\n{\n    "presets": [\n        "@babel/preset-env",\n        "@babel/preset-typescript"\n    ]\n}\n            '},{path:"webpack.config.js",content:'\nconst path = require("path")\nconst webpack = require("webpack")\nconst HtmlWebpackPlugin = require("html-webpack-plugin")\nconst { CleanWebpackPlugin } = require("clean-webpack-plugin")\nconst CopyWebpackPlugin = require("copy-webpack-plugin")\n\nmodule.exports = {\n    entry: "./src/index.tsx",\n    output: {\n        path: path.resolve(__dirname, "build"),\n        filename: "bundle.js",\n    },\n    resolve: {\n        extensions: [".ts", ".tsx", ".js", ".json"],\n    },\n    module: {\n        rules: [\n            {\n                test: /.tsx?$/,\n                loader: "babel-loader",\n            },\n            {\n                test: /.css$/,\n                use: ["style-loader", "css-loader"],\n            },\n            {\n                test: /.(png|svg|jpg|gif)$/,\n                use: ["file-loader"],\n            },\n        ],\n    },\n    plugins: [\n        new CleanWebpackPlugin(),\n        new HtmlWebpackPlugin({\n            template: "./src/public/index.html",\n        }),\n        new CopyWebpackPlugin({\n            patterns: [\n                {\n                    from: "src/assets",\n                    to: "assets",\n                },\n            ],\n        }),\n    ],\n}\n            '},{path:"jest.config.js",content:'\nmodule.exports = {\n    preset: "ts-jest",\n    testEnvironment: "node",\n}\n            '},{path:"src/public/index.html",content:'\n<!DOCTYPE html>\n<html lang="en">\n    <head>\n        <meta charset="utf-8" />\n        <meta name="viewport" content="width=device-width, initial-scale=1" />\n        <title>React App</title>\n    </head>\n    <body>\n        <div id="root"></div>\n    </body>\n</html>\n            '},{path:"src/index.tsx",content:'\nimport React from "react"\nimport ReactDOM from "react-dom"\n\nconst App = () => {\n    return <div>Hello world!</div>\n}\n\nReactDOM.render(<App />, document.getElementById("root"))\n            '},{path:"src/App.tsx",content:'\nimport React from "react"\n\nconst App = () => {\n    return <div>Hello world!</div>\n}\n\nexport default App\n\n            '},{path:"src/App.test.tsx",content:'\nimport React from "react"\nimport ReactDOM from "react-dom"\nimport App from "./App"\n\nit("renders without crashing", () => {\n    const div = document.createElement("div")\n    ReactDOM.render(<App />, div)\n    ReactDOM.unmountComponentAtNode(div)\n})\n            '},{path:"src/index.test.tsx",content:'\nimport React from "react"\nimport ReactDOM from "react-dom"\nimport App from "./App"\n\nit("renders without crashing", () => {\n    const div = document.createElement("div")\n    ReactDOM.render(<App />, div)\n    ReactDOM.unmountComponentAtNode(div)\n})\n            '},{path:"src/components/Hello.tsx",content:'\nimport React from "react"\n\ninterface Props {\n    name: string\n}\n\nconst Hello = (props: Props) => {\n    return <div>Hello {props.name}</div>\n}\n\nexport default Hello\n            '},{path:"src/components/Hello.test.tsx",content:'\nimport React from "react"\nimport ReactDOM from "react-dom"\nimport Hello from "./Hello"\n\nit("renders without crashing", () => {\n    const div = document.createElement("div")\n    ReactDOM.render(<Hello name="world" />, div)\n    ReactDOM.unmountComponentAtNode(div)\n})\n            '},{path:"src/components/Hello.spec.tsx",content:'\nimport React from "react"\nimport ReactDOM from "react-dom"\nimport Hello from "./Hello"\n\nit("renders without crashing", () => {\n    const div = document.createElement("div")\n    ReactDOM.render(<Hello name="world" />, div)\n    ReactDOM.unmountComponentAtNode(div)\n})\n            '}],this.scripts={start:"webpack-dev-server --mode development --open",build:"webpack --mode production",test:"jest",lint:"eslint --ext .js,.jsx,.ts,.tsx src",format:'prettier --write "src/**/*.{js,jsx,ts,tsx,json,css,md}"',precommit:"lint-staged",prepush:"npm run test"},this.devDependencies=["@babel/core","@babel/preset-env","@babel/preset-react","@babel/preset-typescript","@types/jest","@types/node","@types/react","@types/react-dom","@typescript-eslint/eslint-plugin","@typescript-eslint/parser","babel-loader","clean-webpack-plugin","copy-webpack-plugin","css-loader","eslint","eslint-config-prettier","eslint-plugin-prettier","eslint-plugin-react","eslint-plugin-react-hooks","html-webpack-plugin","typescript","jest","prettier"],this.dependencies=["react","react-dom","react-router-dom","webpack","webpack-cli","webpack-dev-server","ts-jest","ts-loader","style-loader","file-loader"],this.globalDependencies=["typescript","webpack","webpack-cli","webpack-dev-server","ts-jest","ts-loader","jest"]}}},469:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NextTypescript=void 0,t.NextTypescript=class{constructor(){this.name="next-typescript",this.folders=["src","compile","build","dist"],this.files=[{path:"tsconfig.json",content:'\n{\n    "compilerOptions": {\n        "target": "es2018",\n        "module": "commonjs",\n        "baseUrl": ".",\n        "outDir": "pre-build",\n        "rootDir": "src",\n        "strict": true,\n        "forceConsistentCasingInFileNames": true,\n        "esModuleInterop": true,\n        "sourceMap": true,\n        "typeRoots": ["node_modules/@types"],\n        "types": ["node"],\n        "paths": {\n            "*": ["src/*"]\n        }\n    },\n    "include": ["src/**/*"],\n    "exclude": [\n        "node_modules",\n        "**/*.spec.ts",\n        "**/*.test.ts",\n        "**/*.spec.tsx",\n        "**/*.test.tsx",\n        "pre-build",\n        "build"\n    ]\n}\n            '},{path:"src/index.tsx",content:"console.log('Hello world!')"},{path:".prettierrc.json",content:'\n{\n    "printWidth": 80,\n    "tabWidth": 4,\n    "useTabs": false,\n    "semi": true,\n    "singleQuote": true,\n    "trailingComma": "es5",\n    "bracketSpacing": true,\n    "arrowParens": "avoid",\n    "endOfLine": "lf"\n}\n            '},{path:".eslintrc.json",content:'\n{\n    "env": {\n        "browser": true,\n        "es6": true\n    },\n    "extends": ["eslint:recommended", "plugin:react/recommended", "plugin:prettier/recommended"],\n    "parser": "@typescript-eslint/parser",\n    "parserOptions": {\n        "ecmaFeatures": {\n            "jsx": true\n        },\n        "ecmaVersion": 2018,\n        "sourceType": "module"\n    },\n    "plugins": ["react", "prettier", "@typescript-eslint"],\n    "rules": {\n        "prettier/prettier": "error",\n        "react/prop-types": 0\n    }\n}\n            '},{path:".babelrc",content:'\n{\n    "presets": ["@babel/preset-env", "@babel/preset-react", "@babel/preset-typescript"]\n}\n            '},{path:"webpack.config.js",content:'\nconst path = require("path")\nconst webpack = require("webpack")\nconst HtmlWebpackPlugin = require("html-webpack-plugin")\nconst { CleanWebpackPlugin } = require("clean-webpack-plugin")\n\nmodule.exports = {\n    entry: "./src/index.tsx",\n    output: {\n        path: path.resolve(__dirname, "build"),\n        filename: "bundle.js",\n    },\n    resolve: {\n        extensions: [".ts", ".tsx", ".js", ".jsx"],\n    },\n    module: {\n        rules: [\n            {\n                test: /.tsx?$/,\n                loader: "babel-loader",\n            },\n            {\n                test: /.css$/,\n                use: ["style-loader", "css-loader"],\n            },\n        ],\n    },\n    plugins: [\n        new CleanWebpackPlugin(),\n        new HtmlWebpackPlugin({\n            template: "./src/index.html",\n        }),\n        new webpack.DefinePlugin({\n            "process.env.NODE_ENV": JSON.stringify(process.env.NODE_ENV),\n        }),\n    ],\n    devServer: {\n        contentBase: path.join(__dirname, "build"),\n        compress: true,\n        port: 9000,\n    },\n}\n            '},{path:"src/index.html",content:'\n<!DOCTYPE html>\n<html lang="en">\n    <head>\n        <meta charset="utf-8" />\n        <meta name="viewport" content="width=device-width, initial-scale=1" />\n        <title>Next.js TypeScript</title>\n    </head>\n    <body>\n        <div id="root"></div>\n    </body>\n</html>\n            '},{path:"jest.config.js",content:'\nmodule.exports = {\n    preset: "ts-jest",\n    testEnvironment: "node",\n    testRegex: "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",\n    moduleFileExtensions: ["ts", "tsx", "js", "jsx", "json", "node"],\n}\n            '},{path:"src/index.spec.tsx",content:'\nimport React from "react"\nimport { render } from "@testing-library/react"\nimport App from "./index"\n\ntest("renders learn react link", () => {\n    const { getByText } = render(<App />)\n    const linkElement = getByText(/learn react/i)\n    expect(linkElement).toBeInTheDocument()\n})\n            '}],this.scripts={build:"webpack --mode production",dev:"webpack serve --mode development",lint:"eslint --ext .ts,.tsx,.js,.jsx src",test:"jest",prettier:"prettier --write ."},this.devDependencies=["@babel/core","@babel/preset-env","@babel/preset-react","@babel/preset-typescript","@types/jest","@types/node","@types/react","@types/react-dom","@types/webpack-env","@typescript-eslint/eslint-plugin","@typescript-eslint/parser","babel-loader","clean-webpack-plugin","css-loader","eslint","eslint-config-prettier","eslint-plugin-prettier","eslint-plugin-react","html-webpack-plugin","jest","prettier","style-loader","ts-jest","ts-loader","typescript","webpack","webpack-cli","webpack-dev-server"],this.dependencies=["react","react-dom"],this.globalDependencies=["typescript","webpack","webpack-cli","webpack-dev-server","ts-loader","babel-loader","jest","ts-jest","eslint","prettier"]}}},442:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ReactTypescript=void 0,t.ReactTypescript=class{constructor(){this.name="react-typescript",this.folders=["src","compile","build","dist"],this.files=[{path:"tsconfig.json",content:'\n{\n    "compilerOptions": {\n        "target": "es2018",\n        "module": "commonjs",\n        "baseUrl": ".",\n        "outDir": "compile",\n        "rootDir": "src",\n        "strict": true,\n        "forceConsistentCasingInFileNames": true,\n        "esModuleInterop": true,\n        "sourceMap": true,\n        "typeRoots": ["node_modules/@types"],\n        "types": ["node"],\n        "paths": {\n            "*": ["src/*"]\n        }\n    },\n    "include": ["src/**/*"],\n    "exclude": [\n        "node_modules",\n        "**/*.spec.ts",\n        "**/*.test.ts",\n        "**/*.spec.tsx",\n        "**/*.test.tsx",\n        "dist",\n        "compile",\n        "build"\n    ]\n}\n            '},{path:"src/index.tsx",content:"console.log('Hello world!')"},{path:".prettierrc",content:'\n{\n    "printWidth": 80,\n    "tabWidth": 4,\n    "useTabs": false,\n    "semi": true,\n    "singleQuote": true,\n    "trailingComma": "es5",\n    "bracketSpacing": true,\n    "arrowParens": "avoid",\n    "endOfLine": "lf"\n}\n            '},{path:".eslintrc.js",content:'\nmodule.exports = {\n    root: true,\n    env: {\n        es6: true,\n        node: true,\n        commonjs: true,\n    },\n    parser: "@babel/eslint-parser",\n    parserOptions: {\n        ecmaVersion: 2018,\n        sourceType: "module",\n    },\n    plugins: ["import"],\n    extends: [\n        "eslint:recommended",\n        "plugin:import/errors",\n        "plugin:import/warnings",\n        "plugin:import/typescript",\n        "prettier",\n    ],\n    rules: {\n        "import/no-unresolved": "error",\n        "import/named": "error",\n        "import/default": "error",\n        "import/namespace": "error",\n        "import/no-named-as-default": "error",\n        "import/no-named-as-default-member": "error",\n        "import/no-extraneous-dependencies": [\n            "error",\n            { devDependencies: ["**/*.test.js", "**/*.spec.js"] },\n        ],\n        "no-unused-vars": ["error", { argsIgnorePattern: "^_" }],\n        semi: ["error", "never"],\n        "comma-dangle": ["error", "always-multiline"],\n        quotes: ["error", "single"],\n    },\n}\n            '},{path:".babelrc",content:'\nmodule.exports = {\n    presets: [\n        [\n            "@babel/preset-env",\n            {\n                targets: {\n                    node: "current"\n                }\n            }\n        ],\n        "@babel/preset-react",\n        "@babel/preset-typescript"\n    ],\n    plugins: [\n        "@babel/plugin-proposal-class-properties",\n        "@babel/plugin-proposal-object-rest-spread",\n        "@babel/plugin-transform-runtime"\n    ]\n}\n            '},{path:"webpack.config.js",content:'\nconst path = require("path")\nconst HtmlWebpackPlugin = require("html-webpack-plugin")\nconst { CleanWebpackPlugin } = require("clean-webpack-plugin")\nconst CopyWebpackPlugin = require("copy-webpack-plugin")\n\nmodule.exports = {\n    entry: "./src/index.tsx",\n    output: {\n        path: path.resolve(__dirname, "dist"),\n        filename: "bundle.js",\n    },\n    resolve: {\n        extensions: [".ts", ".tsx", ".js", ".jsx"],\n    },\n    module: {\n        rules: [\n            {\n                test: /.tsx?$/,\n                loader: "ts-loader",\n                exclude: /node_modules/,\n            },\n            {\n                test: /.css$/,\n                use: ["style-loader", "css-loader"],\n            },\n            {\n                test: /.(png|svg|jpg|gif)$/,\n                use: ["file-loader"],\n            },\n        ],\n    },\n    plugins: [\n        new CleanWebpackPlugin(),\n        new HtmlWebpackPlugin({\n            template: "./src/public/index.html",\n        }),\n        new CopyWebpackPlugin({\n            patterns: [\n                {\n                    from: "src/public/assets",\n                    to: "assets",\n                },\n            ],\n        }),\n    ],\n}\n            '},{path:"src/public/index.html",content:'\n<!DOCTYPE html>\n<html lang="en">\n    <head>\n        <meta charset="utf-8" />\n        <meta name="viewport" content="width=device-width, initial-scale=1" />\n        <title>React Typescript</title>\n    </head>\n    <body>\n        <div id="root"></div>\n    </body>\n</html>\n            '},{path:"src/index.tsx",content:'\nimport React from "react"\nimport ReactDOM from "react-dom"\n\nconst App = () => {\n    return <h1>Hello World!</h1>\n}\n\nReactDOM.render(<App />, document.getElementById("root"))\n            '},{path:"jest.config.js",content:'\nmodule.exports = {\n    preset: "ts-jest",\n    testEnvironment: "node",\n    testRegex: "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",\n    moduleFileExtensions: ["ts", "tsx", "js", "jsx", "json", "node"],\n}\n            '},{path:"src/__tests__/index.test.tsx",content:'\nimport React from "react"\nimport { render } from "@testing-library/react"\nimport App from "../index"\n\ntest("renders learn react link", () => {\n    const { getByText } = render(<App />)\n    const linkElement = getByText(/learn react/i)\n    expect(linkElement).toBeInTheDocument()\n})\n            '}],this.scripts={start:"webpack-dev-server --mode development --open",build:"webpack --mode production",test:"jest",lint:"eslint --ext .js,.jsx,.ts,.tsx src",format:'prettier --write "src/**/*.{js,jsx,ts,tsx,json,css,md}"',precommit:"lint-staged",prepush:"npm run test"},this.devDependencies=["@babel/core","@babel/plugin-proposal-class-properties","@babel/plugin-proposal-object-rest-spread","@babel/plugin-transform-runtime","@babel/preset-env","@babel/preset-react","@babel/preset-typescript","@types/jest","@types/node","@types/react","@types/react-dom","@typescript-eslint/eslint-plugin","@typescript-eslint/parser","babel-loader","clean-webpack-plugin","copy-webpack-plugin","css-loader","eslint","eslint-config-prettier","eslint-plugin-prettier","eslint-plugin-react","html-webpack-plugin","husky","jest","lint-staged","prettier"],this.dependencies=["react","react-dom","react-router-dom","ts-jest","typescript","webpack","webpack-cli","webpack-dev-server","style-loader","file-loader"],this.globalDependencies=["typescript","webpack","webpack-cli","webpack-dev-server","ts-jest","jest","eslint","prettier"]}}},146:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TkinterPython=void 0,t.TkinterPython=class{constructor(){this.name="tkinter-python",this.folders=["src","compile","build","dist"],this.files=[{path:"src/main.py",content:'\nimport tkinter as tk\n\nroot = tk.Tk()\nroot.title("Hello World")\nroot.geometry("400x400")\n\nlabel = tk.Label(root, text="Hello World")\nlabel.pack()\n\nroot.mainloop()\n            '}]}}},357:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.terminal=void 0;const r=n(703);t.terminal=class{static log(e){const t=new r.Icons(e);for(var n=arguments.length,o=new Array(n>1?n-1:0),s=1;s<n;s++)o[s-1]=arguments[s];const i=void 0!==o?" "+o:"";console.log(t+i)}static logInline(e,t){const n=new r.Icons(e),o=void 0!==t?" "+t:"";process.stdout.write(n+o)}static label(e,t){"green"===e&&console.log(" [[32m"+t+"[0m]"),"red"===e&&console.log(" [[31m"+t+"[0m]"),"yellow"===e&&console.log(" [[33m"+t+"[0m]"),"blue"===e&&console.log(" [[34m"+t+"[0m]"),"magenta"===e&&console.log(" [[35m"+t+"[0m]"),"cyan"===e&&console.log(" [[36m"+t+"[0m]"),"orange"===e&&console.log(" [[33m"+t+"[0m]"),"white"===e&&console.log(" [[37m"+t+"[0m]"),"gray"===e&&console.log(" [[90m"+t+"[0m]")}static fail(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.log("fail",t)}static success(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.log("success",t)}static done(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.log("done",t)}static error(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.log("error",t)}static warn(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.log("warn",t)}static info(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.log("info",t)}static init(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.log("init",t)}static debug(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.log("debug",...t),process.exit(0)}static bug(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.log("bug",t)}static green(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[32m"+t+"[0m")}static red(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[31m"+t+"[0m")}static yellow(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[33m"+t+"[0m")}static black(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[30m"+t+"[0m")}static orange(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[33m"+t+"[0m")}static blue(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[34m"+t+"[0m")}static magenta(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[35m"+t+"[0m")}static cyan(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[36m"+t+"[0m")}static white(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[37m"+t+"[0m")}static gray(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[90m"+t+"[0m")}static grey(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[90m"+t+"[0m")}static bold(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[1m"+t+"[0m")}static italic(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[3m"+t+"[0m")}static underline(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[4m"+t+"[0m")}static inverse(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[7m"+t+"[0m")}static strikethrough(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[9m"+t+"[0m")}static hidden(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];process.stdout.write("[8m"+t+"[0m")}static reset(){process.stdout.write("[0m")}static clear(){console.clear()}static clearLine(){console.log("[2K")}static cursorTo(e,t){console.log("["+(t||"")+";"+e+"f")}static cursorMove(e,t){console.log("["+(t||"")+";"+e+"f")}static cursorUp(e){console.log("["+(e||"")+"A")}static cursorDown(e){console.log("["+(e||"")+"B")}static cursorForward(e){console.log("["+(e||"")+"C")}static cursorBackward(e){console.log("["+(e||"")+"D")}static cursorLeft(e){console.log("["+(e||"")+"D")}static cursorRight(e){console.log("["+(e||"")+"C")}static cursorNextLine(e){console.log("["+(e||"")+"E")}static cursorPrevLine(e){console.log("["+(e||"")+"F")}}},247:e=>{e.exports=require("@commander-js/extra-typings")},650:e=>{e.exports=require("prompts")},81:e=>{e.exports=require("child_process")},147:e=>{e.exports=require("fs")},687:e=>{e.exports=require("https")}},t={},n=function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={exports:{}};return e[r].call(s.exports,s,s.exports,n),s.exports}(120),r=exports;for(var o in n)r[o]=n[o];n.__esModule&&Object.defineProperty(r,"__esModule",{value:!0})})();